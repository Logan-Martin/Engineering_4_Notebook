import board # type: ignore
import digitalio  # type: ignore
import adafruit_mpu6050  # type: ignore
import busio  # type: ignore
import time # type: ignore
from adafruit_display_text import label # type: ignore
import adafruit_displayio_ssd1306 # type: ignore
import terminalio # type: ignore
import displayio # type: ignore

displayio.release_displays() #put this line just below your imports

sda_pin = board.GP14
scl_pin = board.GP15
i2c = busio.I2C(scl_pin, sda_pin) 

display_bus = displayio.I2CDisplay(i2c, device_address=0x3d, reset=board.GP13)
display = adafruit_displayio_ssd1306.SSD1306(display_bus, width=128, height=64)

# Pico, ['0x68']. 
# OLED Screen, ['0x3d'].

led = digitalio.DigitalInOut(board.LED) # on board LED
led.direction = digitalio.Direction.OUTPUT

redLED = digitalio.DigitalInOut(board.GP16)
redLED.direction = digitalio.Direction.OUTPUT

x1 = "?"
y1 = "?"
x2 = "?"
y2 = "?"
x3 = "?"
y3 = "?"

global areaBasedOfCords 
areaBasedOfCords = "?"

haveAllTheCordBeenDefined = False

cords1HaveBeenDefined = False
def userInputCordsFunction1():
    cordsInput1 = input("Please enter the 1st cords in x,y format: ")
    global cords1HaveBeenDefined 
    global x1 
    global y1 
    try:
        splitToCheckForFormat = cordsInput1.split(",",2)
        xCord1 = splitToCheckForFormat[0]
        yCord1 = splitToCheckForFormat[1]
        try:
           x1 = float(xCord1)
           y1 = float(yCord1)
           print("Done.")
        except:
            print("Please use numbers.")
            cords1HaveBeenDefined = False
    except:
        print("Enter in the correct format.")
        cords1HaveBeenDefined = False

cords2HaveBeenDefined = False
def userInputCordsFunction2():
    cordsInput2 = input("Please enter the 2nd cords in x,y format: ")
    global cords2HaveBeenDefined 
    global x2
    global y2 
    try:
        splitToCheckForFormat = cordsInput2.split(",",2)
        xCord2 = splitToCheckForFormat[0]
        yCord2 = splitToCheckForFormat[1]
        try:
           x2 = float(xCord2)
           y2 = float(yCord2)
           print("Done.")
        except:
            print("Please use numbers.")
            cords2HaveBeenDefined = False
    except:
        print("Enter in the correct format.")
        cords2HaveBeenDefined = False

cords3HaveBeenDefined = False
def userInputCordsFunction3():
    cordsInput3 = input("Please enter the 3rd cords in x,y format: ")
    global cords3HaveBeenDefined 
    global x3
    global y3 
    try:
        splitToCheckForFormat = cordsInput3.split(",",2)
        xCord3 = splitToCheckForFormat[0]
        yCord3 = splitToCheckForFormat[1]
        try:
           x3 = float(xCord3)
           y3 = float(yCord3)
           print("Done.")
        except:
            print("Please use numbers.")
            cords3HaveBeenDefined = False
    except:
        print("Enter in the correct format.")
        cords3HaveBeenDefined = False
 
while True:
    time.sleep(0.2)

    splash = displayio.Group() # create the display group

    toptitle = "Input 3 cords, (x,y)."
    firstCordsLine = "1st Cords: " + "(" + str(x1) + "," + str(y1) + ")"
    secondCordsLine = "2nd Cords: " + "(" + str(x2) + "," + str(y2) + ")"
    thirdCordsLine = "3rd Cords: " + "(" + str(x3) + "," + str(y3) + ")"

    areaBasedOfCordsLine = "Area: " + str(areaBasedOfCords) + " sq km"

    text_area = label.Label(terminalio.FONT, text=toptitle, color=0xFFFF00, x=5, y=5) # the order of this command is (font, text, text color, and location)
    splash.append(text_area) # have this after line above, need it for it to work.
    text_area = label.Label(terminalio.FONT, text=firstCordsLine, color=0xFFFF00, x=5, y=20) # the order of this command is (font, text, text color, and location)
    splash.append(text_area)    
    text_area = label.Label(terminalio.FONT, text=secondCordsLine, color=0xFFFF00, x=5, y=30) # the order of this command is (font, text, text color, and location)
    splash.append(text_area)    
    text_area = label.Label(terminalio.FONT, text=thirdCordsLine, color=0xFFFF00, x=5, y=40) # the order of this command is (font, text, text color, and location)
    splash.append(text_area)

    text_area = label.Label(terminalio.FONT, text=areaBasedOfCordsLine, color=0xFFFF00, x=5, y=55) # the order of this command is (font, text, text color, and location)
    splash.append(text_area)

    display.show(splash) # send display group to screen, need this.

    if (cords1HaveBeenDefined == False):
        cords1HaveBeenDefined = True
        userInputCordsFunction1()
    elif (cords1HaveBeenDefined == True):
        if (cords2HaveBeenDefined == False):
            cords2HaveBeenDefined = True
            userInputCordsFunction2()
        elif (cords2HaveBeenDefined == True):
            if (cords3HaveBeenDefined == False):
                cords3HaveBeenDefined = True
                userInputCordsFunction3()
            elif (cords3HaveBeenDefined == True):
                if (haveAllTheCordBeenDefined == False):
                    haveAllTheCordBeenDefined = True
                    print("All cords have been input, yay.")
                    areaBasedOfCords = x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2)
                    areaBasedOfCords = areaBasedOfCords/2
                    areaBasedOfCords = abs(areaBasedOfCords)
                    print("Based on inputs, area is: " + str(areaBasedOfCords) + " sq km")
                    time.sleep(0.5)
                    haveAllTheCordBeenDefined = False
                    cords1HaveBeenDefined = False
                    cords2HaveBeenDefined = False
                    cords3HaveBeenDefined = False


